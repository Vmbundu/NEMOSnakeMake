DIR = 'src/image/fits'
BIN = ["ccdfits","fitsccd","scanfits","fitsglue","fitshead","tabfits"]
NEED = ["ccdmath" ,"ccdstat"]
DATA = ["ccd.in" ,"ccd.out" ,"fits.in" ,"map001.fits" ,"map002.fits" ,"map003.fits" ,"cube.fits", "map004.fits" ,"map004.ccd" ,"map004a.ccd" ,"tab.in" ,"tab.fits"]

rule help:
	shell: 'echo {DIR}'

rule need:
	shell: 'echo {NEED}'

rule clean:
	shell: '@echo Cleaning {DIR}'
		'@rm -f {DATA}'

rule all: 
	shell: '{BIN}'

rule ccd:
	shell: 
	       'echo Creating $@'
	       '$(EXEC) ccdmath out=ccd.in "fie=$(FIE)" size=10,10,1'
	     #  ' @bsf ccd.in '41.644 31.2134 0 93 115' '

rule map:
	input: 'map001.fits'
	       'map002.fits'
	       'map003.fits'
	shell: '$(EXEC) ccdmath "" - "rang(0,1)" size=10,10,1 seed=1 | $(EXEC) ccdfits - {input} ; nemo.coverage ccdfits.c'

rule bitpix64:
	shell:
	      '$(EXEC) ccdmath "" map004.ccd "%x+%y" size=10,10,1' 
	      '$(EXEC) ccdfits map004.ccd map004.fits bitpix=64 ; nemo.coverage ccdfits.c'
	      '$(EXEC) fitsccd map004.fits map004a.ccd; nemo.coverage fitsccd.c'
	      '$(EXEC) ccdmath map004a.ccd,map004.ccd - %1-%2 | ccdstat -'
	      'bsf map004.ccd'
	

rule ccdfits: 
	input: 'ccd.in'
	shell: '@echo Running $@'
	       '$(EXEC) ccdfits {input} fits.in; nemo.coverage ccdfits.c'

rule fitsccd: 
	input: 'ccdfits'
	shell: '@echo Running $@'
	       '$(EXEC) fitsccd fits.in ccd.out; nemo.coverage fitsccd.c'
	       '@echo Testing ccd-fits-ccd with "FIE=$(FIE)"'
	       '$(EXEC) ccdmath ccd.in,ccd.out - %1-%2 | ccdstat -'
	       # '@bsf ccd.out '41.6266 31.2366 -1 93 115''

rule scanfits: 
	input: 'ccdfits'
	shell: '@echo Running $@'
	       '$(EXEC) scanfits fits.in	; nemo.coverage scanfits.c'


rule fitsglue: 
	input: 
	       'map002.fits' 
	       'map003.fits'
	shell:
	       '@echo Running $@'
	       '$(EXEC) fitsglue map%03d.fits cube.fits inlist=1:3 ; nemo.coverage fitsglue.c'
	       '$(EXEC) fitshead map001.fits | grep DATA; nemo.coverage fitshead.c'
	       '$(EXEC) fitshead {input} | grep DATA'
	       '$(EXEC) fitshead cube.fits | grep DATA ; nemo.coverage fitshead.c'
	

rule fitshead: 
	input:
	      'map003.fits'
	shell:
	      '@echo Running $@'
	      '$(EXEC) fitshead map003.fits; nemo.coverage fitshead.c'
rule tab:
	output: 'tab.in'
	shell: '@nemoinp 1:100 > {output}'

rule tabfits:	
	input: 'tab.in'
	shell:
	       '$(EXEC) tabfits tab.in tab.fits nx=10 ny=10 nz=1; nemo.coverage tabfits.c'
	       '$(EXEC) fitshead tab.fits | grep DATA'

